************
ALL REQUESTS REQUIRE THE AUTHORIZATION HEADER IN THE FORM:
Authorization: Token <token>
************

/api/v1/search

Expects:
    {
        "search": <string>
    }

Returns: 
{
    "success": <bool>,
    "payload": <array of vehicles>
}
**Currently only accepts one keyword in the search argument**
Future versions may contain multiple word funtionality

/api/v1/search_advanced/

Expects:
{
    "type": <"and", "or">,
    "filters": {
        "make": <string>
        etc
    }
}

Returns:
{
    "success": <bool>,
    "payload": <array of vehicles>
}

/api/v1/get_vehicle

Expects:
{
    "vehicle_id": <string>
}

Returns:
{
    "success": <bool>,
    "payload": <vehicle>
}

/api/v1/get_saps_flagged

Expects:

Returns:
{
    "success": <bool>,
    "payload": <array of vehicles>
}

/api/v1/get_duplicates

Expects:

Returns:
{
    "success": <bool>,
    "payload": <array of vehicles>
}


/api-auth/
Expects:
{
    "username": <string>,
    "password": <string>
}

Returns:
{
    "token": <string>
}

/api/v1/vehicle/detect
Expects:
{
    "file" : <video>
}

Returns:


/api/v1/vehicle/add_marked_vehicle
Expects:
{
    "license_plate": <string>
}

Returns:
{
    "success": bool
}

/api/v1/vehicle/get_marked_vehicles
Expects:

Returns:
{
    "success": bool,
    "payload": <array of marked vehicles>
}

/api/v1/vehicle/remove_marked_vehicle
Expects:
{
    "license_plate": <string>
}

Returns:
{
    "success": <bool>
}

/api/v1/vehicle/edit_vehicle
*=optional
Expects:
{
    vehicle_id : <integer>,
    *make : <string>,
    *model : <string>,
    *license_plate : <string>,
    *color : <string>,
    *license_plate_duplicate : <string>,
    *saps_flagged : <string>
}

Returns:
{
    success : <boolean>,
    payload : <vehicle object>
}

/api/v1/vehicle/get_vehicle_locations
Expects:
{
    license_plate : <string>
}

Returns:
{
    payload : [
        {
            "vehicle_id": <int>
            "license_plate": <string>
            "tracking": <array of tracking objects>
        }
    ]
}

/api/v1/camera/add
Expects:
{
    file : <file(image)>
    key : <string>
}

Returns:
{
    success : <boolean>
}

/api/v1/camera/add
Expects:
{
    file : <file(image)>
    key : <string>
}

Returns:
{
    success : <boolean>
}

/api/v1/business/edit_business_name
Expects:
{
    name : <string>
    key : <string>
}

Returns:
{
    success : <boolean>
}

/api/v1/business/add_logo
Expects:
{
    file : <file(image)>
}

Returns:
{
    success : <boolean>
}

/api/v1/business/get_logo
Expects:
{
   
}

Returns:
{
    file : <file(image)>
}

/api/v1/business/add_camera
*=optional
Expects:
{
    name : <string>
    *long : <double> #defaults to 0
    *lat : <double>
}

Returns:
{
    success : <boolean>
}

/api/v1/business/get_all_cameras
Expects:
{
    name : <string>
    *long : <double> #defaults to 0
    *lat : <double>
}

Returns:
{
    success : <boolean>
}

/api/v1/business/edit_camera

/api/v1/dashboard/get_single_camera_read_total

/api/v1/dashboard/get_all_camera_total

/api/v1/dashboard/get_camera_history

/api/v1/dashboard/get_user_overview
